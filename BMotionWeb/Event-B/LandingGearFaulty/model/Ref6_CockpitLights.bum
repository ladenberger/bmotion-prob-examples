<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.core.machineFile org.eventb.core.configuration="org.eventb.core.fwd;de.prob.units.mchBase" org.eventb.texttools.text_lastmodified="1422605824657" org.eventb.texttools.text_representation="machine Ref6_CockpitLights refines Ref5_Switch  sees Context0 Context1 Context2 Context3 Lights6&#10;&#10;variables gear door close_door_valve open_door_valve retract_gear_valve extend_gear_valve open_EV close_EV retract_EV extend_EV door_closed door_open gear_extended gear_retracted handle last_door_action last_gear_action last_handle_state shock_absorber lock_door_opening general_EV handle_move general_valve analogical_switch anomaly gears_locked_down gears_maneuvering green_light orange_light red_light valid_sensors_gear_extended valid_sensors_gear_retracted valid_sensors_door_closed valid_sensors_door_open&#10;&#10;invariants&#10;  @gears_locked_down gears_locked_down ∈ POSITION → BOOL&#10;  @gears_maneuvering gears_maneuvering ∈ POSITION → BOOL&#10;  @green_light green_light ∈ LIGHT_STATE&#10;  @orange_light orange_light ∈ LIGHT_STATE&#10;  @red_light red_light ∈ LIGHT_STATE&#10;  @R41 anomaly=FALSE ⇒ ¬(open_EV = TRUE ∧ close_EV = TRUE)&#10;  @R42 anomaly=FALSE ⇒ ¬(retract_EV = TRUE ∧ extend_EV = TRUE)&#10;  @R51 anomaly=FALSE ⇒ ((open_EV = TRUE ∨ close_EV = TRUE ∨ extend_EV = TRUE ∨  retract_EV = TRUE) ⇒ general_EV = TRUE)&#10;  @safe anomaly=FALSE ⇒ ((extend_EV = TRUE ∨  retract_EV = TRUE) ⇒  open_EV = TRUE) // @anomaly anomaly ∈ BOOL //(moved to Ref3)&#10;&#10;events&#10;  event INITIALISATION extends INITIALISATION&#10;    then&#10;      @gears_locked_down gears_locked_down ≔ {front↦FALSE, left↦FALSE, right↦FALSE}&#10;      @gears_maneuvering gears_maneuvering ≔ {front↦FALSE, left↦FALSE, right↦FALSE}&#10;      @green_light green_light ≔ off&#10;      @orange_light orange_light ≔ off&#10;      @red_light red_light ≔ off // @anomaly anomaly ≔ FALSE&#10;  end&#10;&#10;  event env_start_extending extends env_start_extending&#10;  end&#10;&#10;  event env_extend_gear extends env_extend_gear&#10;  end&#10;&#10;  event env_retract_gear extends env_retract_gear&#10;  end&#10;&#10;  event env_start_retracting extends env_start_retracting&#10;  end&#10;&#10;  event env_start_open_door extends env_start_open_door&#10;  end&#10;&#10;  event env_open_door extends env_open_door&#10;  end&#10;&#10;  event env_close_door extends env_close_door&#10;  end&#10;&#10;  event env_start_close_door extends env_start_close_door&#10;  end&#10;&#10;  event env_open_valve_open_door extends env_open_valve_open_door&#10;  end&#10;&#10;  event env_close_valve_open_door extends env_close_valve_open_door&#10;  end&#10;&#10;  event env_open_valve_close_door extends env_open_valve_close_door&#10;  end&#10;&#10;  event env_close_valve_close_door extends env_close_valve_close_door&#10;  end&#10;&#10;  event env_open_valve_retract_gear extends env_open_valve_retract_gear&#10;  end&#10;&#10;  event env_close_valve_retract_gear extends env_close_valve_retract_gear&#10;  end&#10;&#10;  event env_open_valve_extend_gear extends env_open_valve_extend_gear&#10;  end&#10;&#10;  event env_close_valve_extend_gear extends env_close_valve_extend_gear&#10;  end&#10;&#10;  event con_stimulate_open_door_valve extends con_stimulate_open_door_valve&#10;  end&#10;&#10;  event con_stop_stimulate_open_door_valve extends con_stop_stimulate_open_door_valve&#10;  end&#10;&#10;  event con_stimulate_close_door_valve extends con_stimulate_close_door_valve&#10;  end&#10;&#10;  event con_stop_stimulate_close_door_valve extends con_stop_stimulate_close_door_valve&#10;  end&#10;&#10;  event con_stimulate_retract_gear_valve extends con_stimulate_retract_gear_valve&#10;  end&#10;&#10;  event con_stop_stimulate_retract_gear_valve extends con_stop_stimulate_retract_gear_valve&#10;  end&#10;&#10;  event con_stimulate_extend_gear_valve extends con_stimulate_extend_gear_valve&#10;  end&#10;&#10;  event con_stop_stimulate_extend_gear_valve extends con_stop_stimulate_extend_gear_valve&#10;  end&#10;&#10;  event sensor_invalid_gear_extended extends sensor_invalid_gear_extended&#10;  end&#10;&#10;  event sensor_invalid_gear_retracted extends sensor_invalid_gear_retracted&#10;  end&#10;&#10;  event sensor_invalid_door_open extends sensor_invalid_door_open&#10;  end&#10;&#10;  event sensor_invalid_door_closed extends sensor_invalid_door_closed&#10;  end&#10;&#10;  event sensor_invalid_Anomaly extends sensor_invalid_Anomaly&#10;  end&#10;&#10;  event env_toggle_handle extends env_toggle_handle&#10;  end&#10;&#10;  event env_changeShockAbsorber extends env_changeShockAbsorber&#10;  end&#10;&#10;  event con_stimulate_general_valve extends con_stimulate_general_valve&#10;  end&#10;&#10;  event con_stop_stimulate_general_valve extends con_stop_stimulate_general_valve&#10;  end&#10;&#10;  event evn_open_general_valve extends evn_open_general_valve&#10;  end&#10;&#10;  event evn_close_general_valve extends evn_close_general_valve&#10;  end&#10;&#10;  event env_close_switch extends env_close_switch&#10;  end&#10;&#10;  event env_open_switch extends env_open_switch&#10;  end&#10;&#10;  event con_set_anomaly_output extends con_set_anomaly_output&#10;  end&#10;&#10;  event gremlin_gear_retracted extends gremlin_gear_retracted&#10;  end&#10;&#10;  event gremlin_gear_extended extends gremlin_gear_extended&#10;  end&#10;&#10;  event gremlin_door_open extends gremlin_door_open&#10;  end&#10;&#10;  event gremlin_door_closed extends gremlin_door_closed&#10;  end&#10;&#10;&#10;  event con_set_cockpit_outputs&#10;    any newstate_lockeddown_front newstate_lockeddown_left newstate_lockeddown_right newstate_anomaly newstate_invalidsensor&#10;    where&#10;      @grd1 (gears_locked_down(front) ∉ (ran(valid_sensors_gear_extended(front)◁gear_extended(front)) ) )&#10;            ∨ (gears_locked_down(left) ∉ (ran(valid_sensors_gear_extended(left)◁gear_extended(left)) ) )&#10;            ∨ (gears_locked_down(right) ∉ (ran(valid_sensors_gear_extended(right)◁gear_extended(right)) ) )&#10;            ∨ (gears_maneuvering(front) ≠ bool(ran(valid_sensors_gear_retracted(front)◁gear_retracted(front)) = {FALSE} ∧ ran(valid_sensors_gear_extended(front)◁gear_extended(front)) = {FALSE}))&#10;            ∨ (gears_maneuvering(left) ≠ bool(ran(valid_sensors_gear_retracted(left)◁gear_retracted(left)) = {FALSE} ∧ ran(valid_sensors_gear_extended(left)◁gear_extended(left)) = {FALSE}))&#10;            ∨ (gears_maneuvering(right) ≠ bool(ran(valid_sensors_gear_retracted(right)◁gear_retracted(right)) = {FALSE} ∧ ran(valid_sensors_gear_extended(right)◁gear_extended(right)) = {FALSE}))&#10;      @grdinvalidsensor newstate_invalidsensor ∈ POSITION → ℙ(1‥3)&#10;      @grdanomaly newstate_anomaly ∈ BOOL&#10;      @grdlockeddown1 newstate_lockeddown_front ∈ BOOL&#10;      @grdlockeddown2 newstate_lockeddown_left ∈ BOOL&#10;      @grdlockeddown3 newstate_lockeddown_right ∈ BOOL&#10;      @grdValidExtendedSensors (card(ran( (valid_sensors_gear_extended(front)◁gear_extended(front)) ∪ (valid_sensors_gear_extended(left)◁gear_extended(left)) ∪ (valid_sensors_gear_extended(right)◁gear_extended(right)) ))=1)&#10;             ⇒ (newstate_lockeddown_front ∈ ran(valid_sensors_gear_extended(front)◁gear_extended(front))&#10;                ∧ newstate_lockeddown_left ∈ ran(valid_sensors_gear_extended(left)◁gear_extended(left))&#10;                ∧ newstate_lockeddown_right ∈ ran(valid_sensors_gear_extended(right)◁gear_extended(right))&#10;                ∧ newstate_anomaly = anomaly&#10;                ∧ newstate_invalidsensor = ∅)   // sensor ok&#10;&#10;      @grdOneFrontSensorInvalid1 (card(valid_sensors_gear_extended(front)) =3&#10;               ∧ card(ran(valid_sensors_gear_extended(front)◁gear_extended(front)))&gt;1&#10;               ∧ card(gear_extended(front)▷{TRUE})=2)&#10;               ∧ (card(ran( ((valid_sensors_gear_extended(front)∖dom(gear_extended(front)▷{TRUE}))◁gear_extended(front)) ∪ (valid_sensors_gear_extended(left)◁gear_extended(left)) ∪ (valid_sensors_gear_extended(right)◁gear_extended(right)) ))=1)&#10;             ⇒ (newstate_anomaly = anomaly&#10;                ∧ newstate_lockeddown_front = TRUE&#10;                ∧ newstate_lockeddown_left ∈ ran(valid_sensors_gear_extended(left)◁gear_extended(left))&#10;                ∧ newstate_lockeddown_right ∈ ran(valid_sensors_gear_extended(right)◁gear_extended(right))&#10;                ∧ newstate_invalidsensor = {front↦dom(gear_extended(front)▷{FALSE})}) // one of three sensors (the FALSE one) is considered as invalid&#10;      @grdOneFrontSensorInvalid2 (card(valid_sensors_gear_extended(front)) =3&#10;               ∧ card(ran(valid_sensors_gear_extended(front)◁gear_extended(front)))&gt;1&#10;               ∧ card(gear_extended(front)▷{FALSE})=2)&#10;               ∧ (card(ran( ((valid_sensors_gear_extended(front)∖dom(gear_extended(front)▷{FALSE}))◁gear_extended(front)) ∪ (valid_sensors_gear_extended(left)◁gear_extended(left)) ∪ (valid_sensors_gear_extended(right)◁gear_extended(right)) ))=1)&#10;             ⇒ (newstate_anomaly = anomaly&#10;                ∧ newstate_lockeddown_front = FALSE&#10;                ∧ newstate_lockeddown_left ∈ ran(valid_sensors_gear_extended(left)◁gear_extended(left))&#10;                ∧ newstate_lockeddown_right ∈ ran(valid_sensors_gear_extended(right)◁gear_extended(right))&#10;                ∧ newstate_invalidsensor = {front↦dom(gear_extended(front)▷{TRUE})}) // one of three sensors (the TRUE one) is considered as invalid&#10;&#10;      @grdOneLeftSensorInvalid1 (card(valid_sensors_gear_extended(left)) =3&#10;               ∧ card(ran(valid_sensors_gear_extended(left)◁gear_extended(left)))&gt;1&#10;               ∧ card(gear_extended(left)▷{TRUE})=2)&#10;               ∧ (card(ran( ((valid_sensors_gear_extended(left)∖dom(gear_extended(left)▷{TRUE}))◁gear_extended(left)) ∪ (valid_sensors_gear_extended(front)◁gear_extended(front)) ∪ (valid_sensors_gear_extended(right)◁gear_extended(right)) ))=1)&#10;             ⇒ (newstate_anomaly = anomaly&#10;                ∧ newstate_lockeddown_left = TRUE&#10;                ∧ newstate_lockeddown_front ∈ ran(valid_sensors_gear_extended(front)◁gear_extended(front))&#10;                ∧ newstate_lockeddown_right ∈ ran(valid_sensors_gear_extended(right)◁gear_extended(right))&#10;                ∧ newstate_invalidsensor = {left↦dom(gear_extended(left)▷{FALSE})}) // one of three sensors (the FALSE one) is considered as invalid&#10;      @grdOneLeftSensorInvalid2 (card(valid_sensors_gear_extended(left)) =3&#10;               ∧ card(ran(valid_sensors_gear_extended(left)◁gear_extended(left)))&gt;1&#10;               ∧ card(gear_extended(left)▷{FALSE})=2)&#10;               ∧ (card(ran( ((valid_sensors_gear_extended(left)∖dom(gear_extended(left)▷{FALSE}))◁gear_extended(left)) ∪ (valid_sensors_gear_extended(front)◁gear_extended(front)) ∪ (valid_sensors_gear_extended(right)◁gear_extended(right)) ))=1)&#10;             ⇒ (newstate_anomaly = anomaly&#10;                ∧ newstate_lockeddown_left = FALSE&#10;                ∧ newstate_lockeddown_front ∈ ran(valid_sensors_gear_extended(front)◁gear_extended(front))&#10;                ∧ newstate_lockeddown_right ∈ ran(valid_sensors_gear_extended(right)◁gear_extended(right))&#10;                ∧ newstate_invalidsensor = {left↦dom(gear_extended(left)▷{TRUE})}) // one of three sensors (the TRUE one) is considered as invalid&#10;&#10;      @grdOneRightSensorInvalid1 (card(valid_sensors_gear_extended(right)) =3&#10;               ∧ card(ran(valid_sensors_gear_extended(right)◁gear_extended(right)))&gt;1&#10;               ∧ card(gear_extended(right)▷{TRUE})=2)&#10;               ∧ (card(ran( ((valid_sensors_gear_extended(right)∖dom(gear_extended(right)▷{TRUE}))◁gear_extended(right)) ∪ (valid_sensors_gear_extended(front)◁gear_extended(front)) ∪ (valid_sensors_gear_extended(left)◁gear_extended(left)) ))=1)&#10;             ⇒ (newstate_anomaly = anomaly&#10;                ∧ newstate_lockeddown_right = TRUE&#10;                ∧ newstate_lockeddown_front ∈ ran(valid_sensors_gear_extended(front)◁gear_extended(front))&#10;                ∧ newstate_lockeddown_left ∈ ran(valid_sensors_gear_extended(left)◁gear_extended(left))&#10;                ∧ newstate_invalidsensor = {right↦dom(gear_extended(right)▷{FALSE})}) // one of three sensors (the FALSE one) is considered as invalid&#10;      @grdOneRightSensorInvalid2 (card(valid_sensors_gear_extended(right)) =3&#10;               ∧ card(ran(valid_sensors_gear_extended(right)◁gear_extended(right)))&gt;1&#10;               ∧ card(gear_extended(right)▷{FALSE})=2)&#10;               ∧ (card(ran( ((valid_sensors_gear_extended(right)∖dom(gear_extended(right)▷{FALSE}))◁gear_extended(right)) ∪ (valid_sensors_gear_extended(front)◁gear_extended(front)) ∪ (valid_sensors_gear_extended(left)◁gear_extended(left)) ))=1)&#10;             ⇒ (newstate_anomaly = anomaly&#10;                ∧ newstate_lockeddown_right = FALSE&#10;                ∧ newstate_lockeddown_front ∈ ran(valid_sensors_gear_extended(front)◁gear_extended(front))&#10;                ∧ newstate_lockeddown_left ∈ ran(valid_sensors_gear_extended(left)◁gear_extended(left))&#10;                ∧ newstate_invalidsensor = {right↦dom(gear_extended(right)▷{TRUE})}) // one of three sensors (the TRUE one) is considered as invalid&#10;&#10;&#10;&#10;      @grdCompleteInvalidSensor (card(valid_sensors_gear_extended(front) ∪ valid_sensors_gear_extended(left) ∪ valid_sensors_gear_extended(right)) =2&#10;                         ∧ (card(ran( (valid_sensors_gear_extended(front)◁gear_extended(front)) ∪ (valid_sensors_gear_extended(left)◁gear_extended(left)) ∪ (valid_sensors_gear_extended(right)◁gear_extended(right)) ))&gt;1) )&#10;             ⇒ (newstate_anomaly = TRUE&#10;                ∧ newstate_lockeddown_front ∈ ran(valid_sensors_gear_extended(front)◁gear_extended(front))&#10;                ∧ newstate_lockeddown_left ∈ ran(valid_sensors_gear_extended(left)◁gear_extended(left))&#10;                ∧ newstate_lockeddown_right ∈ ran(valid_sensors_gear_extended(right)◁gear_extended(right))&#10;                ∧ newstate_invalidsensor = ∅)   // anomaly, sensor completely wrong&#10;    then&#10;      @act1 gears_locked_down ≔ {front↦newstate_lockeddown_front,left↦newstate_lockeddown_left,right↦newstate_lockeddown_right}&#10;      @act2 gears_maneuvering ≔ {front↦bool(( ran( (valid_sensors_gear_extended(front)◁gear_extended(front)))&#10;                                  ∪ ran( (valid_sensors_gear_retracted(front)◁gear_retracted(front)))&#10;                                ) = {FALSE})}&#10;                                ∪&#10;                                {left↦bool(( ran( (valid_sensors_gear_extended(left)◁gear_extended(left)))&#10;                                  ∪ ran( (valid_sensors_gear_retracted(left)◁gear_retracted(left)))&#10;                                ) = {FALSE})}&#10;                                ∪&#10;                                {right↦bool(( ran( (valid_sensors_gear_extended(right)◁gear_extended(right)))&#10;                                  ∪ ran( (valid_sensors_gear_retracted(right)◁gear_retracted(right)))&#10;                                ) = {FALSE})}&#10;&#10;&#10;      /*@act3 anomaly ≔  newstate_anomaly&#10;      @act4 valid_sensors_gear_extended ≔ valid_sensors_gear_extended ∖ newstate_invalidsensor*/&#10;  end&#10;&#10;  event env_turn_on_red_light&#10;    where&#10;      @grd red_light = off&#10;      @grd2 anomaly = TRUE&#10;    then&#10;      @act red_light ≔ on&#10;  end&#10;&#10;  event env_turn_on_orange_light&#10;    where&#10;      @grd orange_light = off&#10;      @grdNotManeuveringFront gears_maneuvering(front) = TRUE&#10;      @grdNotManeuveringLeft  gears_maneuvering(left)  = TRUE&#10;      @grdNotManeuveringRight gears_maneuvering(right) = TRUE&#10;    then&#10;      @act orange_light ≔ on&#10;  end&#10;&#10;  event env_turn_off_orange_light&#10;    where&#10;      @grd orange_light = on&#10;      @grdNotManeuveringFront gears_maneuvering(front) = FALSE&#10;      @grdNotManeuveringLeft  gears_maneuvering(left)  = FALSE&#10;      @grdNotManeuveringRight gears_maneuvering(right) = FALSE&#10;    then&#10;      @act orange_light ≔ off&#10;  end&#10;&#10;  event env_turn_on_green_light&#10;    where&#10;      @grd green_light = off&#10;      @grdLockedDownFront gears_locked_down(front) = TRUE&#10;      @grdLockedDownLeft  gears_locked_down(left)  = TRUE&#10;      @grdLockedDownRight gears_locked_down(right) = TRUE&#10;    then&#10;      @act green_light ≔ on&#10;  end&#10;&#10;  event env_turn_off_green_light&#10;    where&#10;      @grd green_light = on&#10;      @grdNotLockedDownFront gears_locked_down(front) = FALSE&#10;      @grdNotLockedDownLeft  gears_locked_down(left)  = FALSE&#10;      @grdNotLockedDownRight gears_locked_down(right) = FALSE&#10;    then&#10;      @act green_light ≔ off&#10;  end&#10;end&#10;" version="5">
<org.eventb.core.refinesMachine name="_YHvE8KhYEeS1Uv-zbYdYYQ" org.eventb.core.target="Ref5_Switch"/>
<org.eventb.core.seesContext name="_YHvsAKhYEeS1Uv-zbYdYYQ" org.eventb.core.target="Context0"/>
<org.eventb.core.seesContext name="_YHvsAahYEeS1Uv-zbYdYYQ" org.eventb.core.target="Context1"/>
<org.eventb.core.seesContext name="_YHvsAqhYEeS1Uv-zbYdYYQ" org.eventb.core.target="Context2"/>
<org.eventb.core.seesContext name="_YHvsA6hYEeS1Uv-zbYdYYQ" org.eventb.core.target="Context3"/>
<org.eventb.core.seesContext name="_YHvsBKhYEeS1Uv-zbYdYYQ" org.eventb.core.target="Lights6"/>
<org.eventb.core.variable name="_KkdfoWY0EeO7UsfGCD69ng" org.eventb.core.identifier="gear"/>
<org.eventb.core.variable name="_Y7IDMGY0EeO7UsfGCD69ng" org.eventb.core.identifier="door"/>
<org.eventb.core.variable name="_qpk6kGY3EeO7UsfGCD69ng" org.eventb.core.identifier="close_door_valve"/>
<org.eventb.core.variable name="_qplhoGY3EeO7UsfGCD69ng" org.eventb.core.identifier="open_door_valve"/>
<org.eventb.core.variable name="_qplhoWY3EeO7UsfGCD69ng" org.eventb.core.identifier="retract_gear_valve"/>
<org.eventb.core.variable name="_qplhomY3EeO7UsfGCD69ng" org.eventb.core.identifier="extend_gear_valve"/>
<org.eventb.core.variable name="_xET6kGcBEeO7UsfGCD69ng" org.eventb.core.identifier="open_EV"/>
<org.eventb.core.variable name="_xET6kWcBEeO7UsfGCD69ng" org.eventb.core.identifier="close_EV"/>
<org.eventb.core.variable name="_L0OSwGcCEeO7UsfGCD69ng" org.eventb.core.identifier="retract_EV"/>
<org.eventb.core.variable name="_L0O50GcCEeO7UsfGCD69ng" org.eventb.core.identifier="extend_EV"/>
<org.eventb.core.variable name="_GqifUGcGEeO7UsfGCD69ng" org.eventb.core.identifier="door_closed"/>
<org.eventb.core.variable name="_GqifUWcGEeO7UsfGCD69ng" org.eventb.core.identifier="door_open"/>
<org.eventb.core.variable name="_GqifUmcGEeO7UsfGCD69ng" org.eventb.core.identifier="gear_extended"/>
<org.eventb.core.variable name="_GqjGYGcGEeO7UsfGCD69ng" org.eventb.core.identifier="gear_retracted"/>
<org.eventb.core.variable name="_vCgLIGcSEeO7UsfGCD69ng" org.eventb.core.identifier="handle"/>
<org.eventb.core.variable name="_24Aa4GcqEeOIZYXp1CRUOw" org.eventb.core.identifier="last_door_action"/>
<org.eventb.core.variable name="_zmqekGctEeOU3Z0T65yXqA" org.eventb.core.identifier="last_gear_action"/>
<org.eventb.core.variable name="_Lsb50GcwEeOU3Z0T65yXqA" org.eventb.core.identifier="last_handle_state"/>
<org.eventb.core.variable name="_5Q9YoGmCEeOLrLY1DXbL2w" org.eventb.core.identifier="shock_absorber"/>
<org.eventb.core.variable name="_dpOt4GihEeOT_9tDelWe4g" org.eventb.core.identifier="lock_door_opening"/>
<org.eventb.core.variable name="_TEQyIHd6EeOBXrBZ8EbeCQ" org.eventb.core.identifier="general_EV"/>
<org.eventb.core.variable name="_UjiXEHd7EeOBXrBZ8EbeCQ" org.eventb.core.identifier="handle_move"/>
<org.eventb.core.variable name="_7tRckHeEEeOBXrBZ8EbeCQ" org.eventb.core.identifier="general_valve"/>
<org.eventb.core.variable name="_8S0pkHeYEeOBXrBZ8EbeCQ" org.eventb.core.identifier="analogical_switch"/>
<org.eventb.core.variable name="_U-nk4HkNEeOBXrBZ8EbeCQ" org.eventb.core.identifier="anomaly"/>
<org.eventb.core.variable name="_U-oL8HkNEeOBXrBZ8EbeCQ" org.eventb.core.identifier="gears_locked_down"/>
<org.eventb.core.variable name="_U-oL8XkNEeOBXrBZ8EbeCQ" org.eventb.core.identifier="gears_maneuvering"/>
<org.eventb.core.variable name="_cGSgQHkPEeOBXrBZ8EbeCQ" org.eventb.core.identifier="green_light"/>
<org.eventb.core.variable name="_cGSgQXkPEeOBXrBZ8EbeCQ" org.eventb.core.identifier="orange_light"/>
<org.eventb.core.variable name="_cGSgQnkPEeOBXrBZ8EbeCQ" org.eventb.core.identifier="red_light"/>
<org.eventb.core.variable name="_S8zqwHYcEeSK8a64sCWOYA" org.eventb.core.identifier="valid_sensors_gear_extended"/>
<org.eventb.core.variable name="_S8zqwXYcEeSK8a64sCWOYA" org.eventb.core.identifier="valid_sensors_gear_retracted"/>
<org.eventb.core.variable name="_S8zqwnYcEeSK8a64sCWOYA" org.eventb.core.identifier="valid_sensors_door_closed"/>
<org.eventb.core.variable name="_S8zqw3YcEeSK8a64sCWOYA" org.eventb.core.identifier="valid_sensors_door_open"/>
<org.eventb.core.invariant name="_U-ozAHkNEeOBXrBZ8EbeCQ" org.eventb.core.label="gears_locked_down" org.eventb.core.predicate="gears_locked_down ∈ POSITION → BOOL"/>
<org.eventb.core.invariant name="_U-ozAXkNEeOBXrBZ8EbeCQ" org.eventb.core.label="gears_maneuvering" org.eventb.core.predicate="gears_maneuvering ∈ POSITION → BOOL"/>
<org.eventb.core.invariant name="_cGTHUHkPEeOBXrBZ8EbeCQ" org.eventb.core.label="green_light" org.eventb.core.predicate="green_light ∈ LIGHT_STATE"/>
<org.eventb.core.invariant name="_cGTHUXkPEeOBXrBZ8EbeCQ" org.eventb.core.label="orange_light" org.eventb.core.predicate="orange_light ∈ LIGHT_STATE"/>
<org.eventb.core.invariant name="_cGTHUnkPEeOBXrBZ8EbeCQ" org.eventb.core.label="red_light" org.eventb.core.predicate="red_light ∈ LIGHT_STATE"/>
<org.eventb.core.invariant name="_lIxBwH6_EeOk5IscBNq0oQ" org.eventb.core.label="R41" org.eventb.core.predicate="anomaly=FALSE ⇒ ¬(open_EV = TRUE ∧ close_EV = TRUE)"/>
<org.eventb.core.invariant name="_lIxBwX6_EeOk5IscBNq0oQ" org.eventb.core.label="R42" org.eventb.core.predicate="anomaly=FALSE ⇒ ¬(retract_EV = TRUE ∧ extend_EV = TRUE)"/>
<org.eventb.core.invariant name="_gsqNYH7AEeOk5IscBNq0oQ" org.eventb.core.label="R51" org.eventb.core.predicate="anomaly=FALSE ⇒ ((open_EV = TRUE ∨ close_EV = TRUE ∨ extend_EV = TRUE ∨  retract_EV = TRUE) ⇒ general_EV = TRUE)"/>
<org.eventb.core.invariant name="_thlRYH7AEeOk5IscBNq0oQ" org.eventb.core.comment="@anomaly anomaly ∈ BOOL //(moved to Ref3)" org.eventb.core.label="safe" org.eventb.core.predicate="anomaly=FALSE ⇒ ((extend_EV = TRUE ∨  retract_EV = TRUE) ⇒  open_EV = TRUE)"/>
<org.eventb.core.event name="_zmqekGctEeOU3Z0T65yXqB" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="INITIALISATION">
<org.eventb.core.action name="_U-iFUXkNEeOBXrBZ8EbeCQ" org.eventb.core.assignment="gears_locked_down ≔ {front↦FALSE, left↦FALSE, right↦FALSE}" org.eventb.core.label="gears_locked_down"/>
<org.eventb.core.action name="_U-iFUnkNEeOBXrBZ8EbeCQ" org.eventb.core.assignment="gears_maneuvering ≔ {front↦FALSE, left↦FALSE, right↦FALSE}" org.eventb.core.label="gears_maneuvering"/>
<org.eventb.core.action name="_g5cGMHkPEeOBXrBZ8EbeCQ" org.eventb.core.assignment="green_light ≔ off" org.eventb.core.label="green_light"/>
<org.eventb.core.action name="_g5cGMXkPEeOBXrBZ8EbeCQ" org.eventb.core.assignment="orange_light ≔ off" org.eventb.core.label="orange_light"/>
<org.eventb.core.action name="_g5cGMnkPEeOBXrBZ8EbeCQ" org.eventb.core.assignment="red_light ≔ off" org.eventb.core.comment="@anomaly anomaly ≔ FALSE" org.eventb.core.label="red_light"/>
</org.eventb.core.event>
<org.eventb.core.event name="_zmqekGctEeOU3Z0T65yXqC" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="env_start_extending">
<org.eventb.core.refinesEvent name="_YIAKsKhYEeS1Uv-zbYdYYQ" org.eventb.core.target="env_start_extending"/>
</org.eventb.core.event>
<org.eventb.core.event name="_zmqekGctEeOU3Z0T65yXqD" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="env_extend_gear">
<org.eventb.core.refinesEvent name="_YIAxwKhYEeS1Uv-zbYdYYQ" org.eventb.core.target="env_extend_gear"/>
</org.eventb.core.event>
<org.eventb.core.event name="_zmqekGctEeOU3Z0T65yXqE" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="env_retract_gear">
<org.eventb.core.refinesEvent name="_YIBY0KhYEeS1Uv-zbYdYYQ" org.eventb.core.target="env_retract_gear"/>
</org.eventb.core.event>
<org.eventb.core.event name="_zmqekGctEeOU3Z0T65yXqF" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="env_start_retracting">
<org.eventb.core.refinesEvent name="_YIB_4KhYEeS1Uv-zbYdYYQ" org.eventb.core.target="env_start_retracting"/>
</org.eventb.core.event>
<org.eventb.core.event name="_zmqekGctEeOU3Z0T65yXqG" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="env_start_open_door">
<org.eventb.core.refinesEvent name="_YIB_4ahYEeS1Uv-zbYdYYQ" org.eventb.core.target="env_start_open_door"/>
</org.eventb.core.event>
<org.eventb.core.event name="_zmqekGctEeOU3Z0T65yXqH" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="env_open_door">
<org.eventb.core.refinesEvent name="_YICm8KhYEeS1Uv-zbYdYYQ" org.eventb.core.target="env_open_door"/>
</org.eventb.core.event>
<org.eventb.core.event name="_zmqekGctEeOU3Z0T65yXqI" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="env_close_door">
<org.eventb.core.refinesEvent name="_YIDOAKhYEeS1Uv-zbYdYYQ" org.eventb.core.target="env_close_door"/>
</org.eventb.core.event>
<org.eventb.core.event name="_zmqekGctEeOU3Z0T65yXqJ" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="env_start_close_door">
<org.eventb.core.refinesEvent name="_YIEcIKhYEeS1Uv-zbYdYYQ" org.eventb.core.target="env_start_close_door"/>
</org.eventb.core.event>
<org.eventb.core.event name="_zmqekGctEeOU3Z0T65yXqK" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="env_open_valve_open_door">
<org.eventb.core.refinesEvent name="_YIFDMKhYEeS1Uv-zbYdYYQ" org.eventb.core.target="env_open_valve_open_door"/>
</org.eventb.core.event>
<org.eventb.core.event name="_zmqekGctEeOU3Z0T65yXqL" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="env_close_valve_open_door">
<org.eventb.core.refinesEvent name="_YIFqQKhYEeS1Uv-zbYdYYQ" org.eventb.core.target="env_close_valve_open_door"/>
</org.eventb.core.event>
<org.eventb.core.event name="_zmqekGctEeOU3Z0T65yXqM" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="env_open_valve_close_door">
<org.eventb.core.refinesEvent name="_YIGRUKhYEeS1Uv-zbYdYYQ" org.eventb.core.target="env_open_valve_close_door"/>
</org.eventb.core.event>
<org.eventb.core.event name="_zmqekGctEeOU3Z0T65yXqN" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="env_close_valve_close_door">
<org.eventb.core.refinesEvent name="_YIG4YKhYEeS1Uv-zbYdYYQ" org.eventb.core.target="env_close_valve_close_door"/>
</org.eventb.core.event>
<org.eventb.core.event name="_zmqekGctEeOU3Z0T65yXqO" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="env_open_valve_retract_gear">
<org.eventb.core.refinesEvent name="_YIHfcKhYEeS1Uv-zbYdYYQ" org.eventb.core.target="env_open_valve_retract_gear"/>
</org.eventb.core.event>
<org.eventb.core.event name="_zmqekGctEeOU3Z0T65yXqP" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="env_close_valve_retract_gear">
<org.eventb.core.refinesEvent name="_YIHfcahYEeS1Uv-zbYdYYQ" org.eventb.core.target="env_close_valve_retract_gear"/>
</org.eventb.core.event>
<org.eventb.core.event name="_zmqekGctEeOU3Z0T65yXqQ" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="env_open_valve_extend_gear">
<org.eventb.core.refinesEvent name="_YIIGgKhYEeS1Uv-zbYdYYQ" org.eventb.core.target="env_open_valve_extend_gear"/>
</org.eventb.core.event>
<org.eventb.core.event name="_zmqekGctEeOU3Z0T65yXqR" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="env_close_valve_extend_gear">
<org.eventb.core.refinesEvent name="_YIItkKhYEeS1Uv-zbYdYYQ" org.eventb.core.target="env_close_valve_extend_gear"/>
</org.eventb.core.event>
<org.eventb.core.event name="_zmqekGctEeOU3Z0T65yXqS" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="con_stimulate_open_door_valve">
<org.eventb.core.refinesEvent name="_YIJUoKhYEeS1Uv-zbYdYYQ" org.eventb.core.target="con_stimulate_open_door_valve"/>
</org.eventb.core.event>
<org.eventb.core.event name="_zmqekGctEeOU3Z0T65yXqT" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="con_stop_stimulate_open_door_valve">
<org.eventb.core.refinesEvent name="_YIJ7sKhYEeS1Uv-zbYdYYQ" org.eventb.core.target="con_stop_stimulate_open_door_valve"/>
</org.eventb.core.event>
<org.eventb.core.event name="_zmqekGctEeOU3Z0T65yXqU" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="con_stimulate_close_door_valve">
<org.eventb.core.refinesEvent name="_YIKiwKhYEeS1Uv-zbYdYYQ" org.eventb.core.target="con_stimulate_close_door_valve"/>
</org.eventb.core.event>
<org.eventb.core.event name="_zmqekGctEeOU3Z0T65yXqV" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="con_stop_stimulate_close_door_valve">
<org.eventb.core.refinesEvent name="_YIKiwahYEeS1Uv-zbYdYYQ" org.eventb.core.target="con_stop_stimulate_close_door_valve"/>
</org.eventb.core.event>
<org.eventb.core.event name="_zmqekGctEeOU3Z0T65yXqW" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="con_stimulate_retract_gear_valve">
<org.eventb.core.refinesEvent name="_YILJ0KhYEeS1Uv-zbYdYYQ" org.eventb.core.target="con_stimulate_retract_gear_valve"/>
</org.eventb.core.event>
<org.eventb.core.event name="_zmqekGctEeOU3Z0T65yXqX" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="con_stop_stimulate_retract_gear_valve">
<org.eventb.core.refinesEvent name="_YILw4KhYEeS1Uv-zbYdYYQ" org.eventb.core.target="con_stop_stimulate_retract_gear_valve"/>
</org.eventb.core.event>
<org.eventb.core.event name="_zmqekGctEeOU3Z0T65yXqY" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="con_stimulate_extend_gear_valve">
<org.eventb.core.refinesEvent name="_YIMX8KhYEeS1Uv-zbYdYYQ" org.eventb.core.target="con_stimulate_extend_gear_valve"/>
</org.eventb.core.event>
<org.eventb.core.event name="_zmqekGctEeOU3Z0T65yXqZ" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="con_stop_stimulate_extend_gear_valve">
<org.eventb.core.refinesEvent name="_YIM_AKhYEeS1Uv-zbYdYYQ" org.eventb.core.target="con_stop_stimulate_extend_gear_valve"/>
</org.eventb.core.event>
<org.eventb.core.event name="_wLh80HYeEeSK8a64sCWOYA" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="sensor_invalid_gear_extended">
<org.eventb.core.refinesEvent name="_YINmEKhYEeS1Uv-zbYdYYQ" org.eventb.core.target="sensor_invalid_gear_extended"/>
</org.eventb.core.event>
<org.eventb.core.event name="_wLij43YeEeSK8a64sCWOYA" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="sensor_invalid_gear_retracted">
<org.eventb.core.refinesEvent name="_YINmEahYEeS1Uv-zbYdYYQ" org.eventb.core.target="sensor_invalid_gear_retracted"/>
</org.eventb.core.event>
<org.eventb.core.event name="_EJR3AKYqEeS7o8Abhx9ZFQ" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="sensor_invalid_door_open">
<org.eventb.core.refinesEvent name="_YIONIKhYEeS1Uv-zbYdYYQ" org.eventb.core.target="sensor_invalid_door_open"/>
</org.eventb.core.event>
<org.eventb.core.event name="_wLjK8XYeEeSK8a64sCWOYA" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="sensor_invalid_door_closed">
<org.eventb.core.refinesEvent name="_YIO0MKhYEeS1Uv-zbYdYYQ" org.eventb.core.target="sensor_invalid_door_closed"/>
</org.eventb.core.event>
<org.eventb.core.event name="_wLjK9XYeEeSK8a64sCWOYA" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="sensor_invalid_Anomaly">
<org.eventb.core.refinesEvent name="_YIO0MahYEeS1Uv-zbYdYYQ" org.eventb.core.target="sensor_invalid_Anomaly"/>
</org.eventb.core.event>
<org.eventb.core.event name="_zmqekGctEeOU3Z0T65yXq[" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="env_toggle_handle">
<org.eventb.core.refinesEvent name="_YIPbQKhYEeS1Uv-zbYdYYQ" org.eventb.core.target="env_toggle_handle"/>
</org.eventb.core.event>
<org.eventb.core.event name="_zmqekGctEeOU3Z0T65yXq\" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="env_changeShockAbsorber">
<org.eventb.core.refinesEvent name="_YIQCUKhYEeS1Uv-zbYdYYQ" org.eventb.core.target="env_changeShockAbsorber"/>
</org.eventb.core.event>
<org.eventb.core.event name="_zmqekGctEeOU3Z0T65yXq]" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="con_stimulate_general_valve">
<org.eventb.core.refinesEvent name="_YIQpYKhYEeS1Uv-zbYdYYQ" org.eventb.core.target="con_stimulate_general_valve"/>
</org.eventb.core.event>
<org.eventb.core.event name="_zmqekGctEeOU3Z0T65yXq^" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="con_stop_stimulate_general_valve">
<org.eventb.core.refinesEvent name="_YIQpYahYEeS1Uv-zbYdYYQ" org.eventb.core.target="con_stop_stimulate_general_valve"/>
</org.eventb.core.event>
<org.eventb.core.event name="_zmqekGctEeOU3Z0T65yXq_" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="evn_open_general_valve">
<org.eventb.core.refinesEvent name="_YIR3gKhYEeS1Uv-zbYdYYQ" org.eventb.core.target="evn_open_general_valve"/>
</org.eventb.core.event>
<org.eventb.core.event name="_zmqekGctEeOU3Z0T65yXq`" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="evn_close_general_valve">
<org.eventb.core.refinesEvent name="_YIR3gahYEeS1Uv-zbYdYYQ" org.eventb.core.target="evn_close_general_valve"/>
</org.eventb.core.event>
<org.eventb.core.event name="_zmqekGctEeOU3Z0T65yXqa" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="env_close_switch">
<org.eventb.core.refinesEvent name="_YISekKhYEeS1Uv-zbYdYYQ" org.eventb.core.target="env_close_switch"/>
</org.eventb.core.event>
<org.eventb.core.event name="_zmqekGctEeOU3Z0T65yXqb" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="env_open_switch">
<org.eventb.core.refinesEvent name="_YITFoKhYEeS1Uv-zbYdYYQ" org.eventb.core.target="env_open_switch"/>
</org.eventb.core.event>
<org.eventb.core.event name="_4K0vwH32EeOaotIwUX9rtQ" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="con_set_anomaly_output">
<org.eventb.core.refinesEvent name="_YITssKhYEeS1Uv-zbYdYYQ" org.eventb.core.target="con_set_anomaly_output"/>
</org.eventb.core.event>
<org.eventb.core.event name="_ANk3gHkQEeOBXrBZ8EbeCQ" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.label="con_set_cockpit_outputs">
<org.eventb.core.parameter name="_zA2AAHujEeS15didSJpwjg" org.eventb.core.identifier="newstate_lockeddown_front"/>
<org.eventb.core.parameter name="_IvYMcXYnEeSK8a64sCWOYA" org.eventb.core.identifier="newstate_lockeddown_left"/>
<org.eventb.core.parameter name="_zA2AAXujEeS15didSJpwjg" org.eventb.core.identifier="newstate_lockeddown_right"/>
<org.eventb.core.parameter name="_k6SjAHYnEeSK8a64sCWOYA" org.eventb.core.identifier="newstate_anomaly"/>
<org.eventb.core.parameter name="_uGdiM3YoEeSK8a64sCWOYA" org.eventb.core.identifier="newstate_invalidsensor"/>
<org.eventb.core.guard name="_Gt1isH32EeOaotIwUX9rtQ" org.eventb.core.label="grd1" org.eventb.core.predicate="(gears_locked_down(front) ∉ (ran(valid_sensors_gear_extended(front)◁gear_extended(front)) ) )&#10;            ∨ (gears_locked_down(left) ∉ (ran(valid_sensors_gear_extended(left)◁gear_extended(left)) ) )&#10;            ∨ (gears_locked_down(right) ∉ (ran(valid_sensors_gear_extended(right)◁gear_extended(right)) ) )&#10;            ∨ (gears_maneuvering(front) ≠ bool(ran(valid_sensors_gear_retracted(front)◁gear_retracted(front)) = {FALSE} ∧ ran(valid_sensors_gear_extended(front)◁gear_extended(front)) = {FALSE}))&#10;            ∨ (gears_maneuvering(left) ≠ bool(ran(valid_sensors_gear_retracted(left)◁gear_retracted(left)) = {FALSE} ∧ ran(valid_sensors_gear_extended(left)◁gear_extended(left)) = {FALSE}))&#10;            ∨ (gears_maneuvering(right) ≠ bool(ran(valid_sensors_gear_retracted(right)◁gear_retracted(right)) = {FALSE} ∧ ran(valid_sensors_gear_extended(right)◁gear_extended(right)) = {FALSE}))"/>
<org.eventb.core.guard name="_64-LYHYoEeSK8a64sCWOYA" org.eventb.core.label="grdinvalidsensor" org.eventb.core.predicate="newstate_invalidsensor ∈ POSITION → ℙ(1‥3)"/>
<org.eventb.core.guard name="_FTrNQHubEeS15didSJpwjg" org.eventb.core.label="grdanomaly" org.eventb.core.predicate="newstate_anomaly ∈ BOOL"/>
<org.eventb.core.guard name="_zA2nEHujEeS15didSJpwjg" org.eventb.core.label="grdlockeddown1" org.eventb.core.predicate="newstate_lockeddown_front ∈ BOOL"/>
<org.eventb.core.guard name="_FTrNQXubEeS15didSJpwjg" org.eventb.core.label="grdlockeddown2" org.eventb.core.predicate="newstate_lockeddown_left ∈ BOOL"/>
<org.eventb.core.guard name="_zA2nEXujEeS15didSJpwjg" org.eventb.core.label="grdlockeddown3" org.eventb.core.predicate="newstate_lockeddown_right ∈ BOOL"/>
<org.eventb.core.guard name="_sJHsgHueEeS15didSJpwjg" org.eventb.core.comment="sensor ok" org.eventb.core.label="grdValidExtendedSensors" org.eventb.core.predicate="(card(ran( (valid_sensors_gear_extended(front)◁gear_extended(front)) ∪ (valid_sensors_gear_extended(left)◁gear_extended(left)) ∪ (valid_sensors_gear_extended(right)◁gear_extended(right)) ))=1)&#10;             ⇒ (newstate_lockeddown_front ∈ ran(valid_sensors_gear_extended(front)◁gear_extended(front))&#10;                ∧ newstate_lockeddown_left ∈ ran(valid_sensors_gear_extended(left)◁gear_extended(left))&#10;                ∧ newstate_lockeddown_right ∈ ran(valid_sensors_gear_extended(right)◁gear_extended(right))&#10;                ∧ newstate_anomaly = anomaly&#10;                ∧ newstate_invalidsensor = ∅)"/>
<org.eventb.core.guard name="_9QB4MHugEeS15didSJpwjg" org.eventb.core.comment="one of three sensors (the FALSE one) is considered as invalid" org.eventb.core.label="grdOneFrontSensorInvalid1" org.eventb.core.predicate="(card(valid_sensors_gear_extended(front)) =3&#10;               ∧ card(ran(valid_sensors_gear_extended(front)◁gear_extended(front)))&gt;1&#10;               ∧ card(gear_extended(front)▷{TRUE})=2)&#10;               ∧ (card(ran( ((valid_sensors_gear_extended(front)∖dom(gear_extended(front)▷{TRUE}))◁gear_extended(front)) ∪ (valid_sensors_gear_extended(left)◁gear_extended(left)) ∪ (valid_sensors_gear_extended(right)◁gear_extended(right)) ))=1)&#10;             ⇒ (newstate_anomaly = anomaly&#10;                ∧ newstate_lockeddown_front = TRUE&#10;                ∧ newstate_lockeddown_left ∈ ran(valid_sensors_gear_extended(left)◁gear_extended(left))&#10;                ∧ newstate_lockeddown_right ∈ ran(valid_sensors_gear_extended(right)◁gear_extended(right))&#10;                ∧ newstate_invalidsensor = {front↦dom(gear_extended(front)▷{FALSE})})"/>
<org.eventb.core.guard name="_RqyaQHujEeS15didSJpwjg" org.eventb.core.comment="one of three sensors (the TRUE one) is considered as invalid" org.eventb.core.label="grdOneFrontSensorInvalid2" org.eventb.core.predicate="(card(valid_sensors_gear_extended(front)) =3&#10;               ∧ card(ran(valid_sensors_gear_extended(front)◁gear_extended(front)))&gt;1&#10;               ∧ card(gear_extended(front)▷{FALSE})=2)&#10;               ∧ (card(ran( ((valid_sensors_gear_extended(front)∖dom(gear_extended(front)▷{FALSE}))◁gear_extended(front)) ∪ (valid_sensors_gear_extended(left)◁gear_extended(left)) ∪ (valid_sensors_gear_extended(right)◁gear_extended(right)) ))=1)&#10;             ⇒ (newstate_anomaly = anomaly&#10;                ∧ newstate_lockeddown_front = FALSE&#10;                ∧ newstate_lockeddown_left ∈ ran(valid_sensors_gear_extended(left)◁gear_extended(left))&#10;                ∧ newstate_lockeddown_right ∈ ran(valid_sensors_gear_extended(right)◁gear_extended(right))&#10;                ∧ newstate_invalidsensor = {front↦dom(gear_extended(front)▷{TRUE})})"/>
<org.eventb.core.guard name="_s-mCUHumEeS15didSJpwjg" org.eventb.core.comment="one of three sensors (the FALSE one) is considered as invalid" org.eventb.core.label="grdOneLeftSensorInvalid1" org.eventb.core.predicate="(card(valid_sensors_gear_extended(left)) =3&#10;               ∧ card(ran(valid_sensors_gear_extended(left)◁gear_extended(left)))&gt;1&#10;               ∧ card(gear_extended(left)▷{TRUE})=2)&#10;               ∧ (card(ran( ((valid_sensors_gear_extended(left)∖dom(gear_extended(left)▷{TRUE}))◁gear_extended(left)) ∪ (valid_sensors_gear_extended(front)◁gear_extended(front)) ∪ (valid_sensors_gear_extended(right)◁gear_extended(right)) ))=1)&#10;             ⇒ (newstate_anomaly = anomaly&#10;                ∧ newstate_lockeddown_left = TRUE&#10;                ∧ newstate_lockeddown_front ∈ ran(valid_sensors_gear_extended(front)◁gear_extended(front))&#10;                ∧ newstate_lockeddown_right ∈ ran(valid_sensors_gear_extended(right)◁gear_extended(right))&#10;                ∧ newstate_invalidsensor = {left↦dom(gear_extended(left)▷{FALSE})})"/>
<org.eventb.core.guard name="_s-mpYHumEeS15didSJpwjg" org.eventb.core.comment="one of three sensors (the TRUE one) is considered as invalid" org.eventb.core.label="grdOneLeftSensorInvalid2" org.eventb.core.predicate="(card(valid_sensors_gear_extended(left)) =3&#10;               ∧ card(ran(valid_sensors_gear_extended(left)◁gear_extended(left)))&gt;1&#10;               ∧ card(gear_extended(left)▷{FALSE})=2)&#10;               ∧ (card(ran( ((valid_sensors_gear_extended(left)∖dom(gear_extended(left)▷{FALSE}))◁gear_extended(left)) ∪ (valid_sensors_gear_extended(front)◁gear_extended(front)) ∪ (valid_sensors_gear_extended(right)◁gear_extended(right)) ))=1)&#10;             ⇒ (newstate_anomaly = anomaly&#10;                ∧ newstate_lockeddown_left = FALSE&#10;                ∧ newstate_lockeddown_front ∈ ran(valid_sensors_gear_extended(front)◁gear_extended(front))&#10;                ∧ newstate_lockeddown_right ∈ ran(valid_sensors_gear_extended(right)◁gear_extended(right))&#10;                ∧ newstate_invalidsensor = {left↦dom(gear_extended(left)▷{TRUE})})"/>
<org.eventb.core.guard name="_s-mpYXumEeS15didSJpwjg" org.eventb.core.comment="one of three sensors (the FALSE one) is considered as invalid" org.eventb.core.label="grdOneRightSensorInvalid1" org.eventb.core.predicate="(card(valid_sensors_gear_extended(right)) =3&#10;               ∧ card(ran(valid_sensors_gear_extended(right)◁gear_extended(right)))&gt;1&#10;               ∧ card(gear_extended(right)▷{TRUE})=2)&#10;               ∧ (card(ran( ((valid_sensors_gear_extended(right)∖dom(gear_extended(right)▷{TRUE}))◁gear_extended(right)) ∪ (valid_sensors_gear_extended(front)◁gear_extended(front)) ∪ (valid_sensors_gear_extended(left)◁gear_extended(left)) ))=1)&#10;             ⇒ (newstate_anomaly = anomaly&#10;                ∧ newstate_lockeddown_right = TRUE&#10;                ∧ newstate_lockeddown_front ∈ ran(valid_sensors_gear_extended(front)◁gear_extended(front))&#10;                ∧ newstate_lockeddown_left ∈ ran(valid_sensors_gear_extended(left)◁gear_extended(left))&#10;                ∧ newstate_invalidsensor = {right↦dom(gear_extended(right)▷{FALSE})})"/>
<org.eventb.core.guard name="_s-mpYnumEeS15didSJpwjg" org.eventb.core.comment="one of three sensors (the TRUE one) is considered as invalid" org.eventb.core.label="grdOneRightSensorInvalid2" org.eventb.core.predicate="(card(valid_sensors_gear_extended(right)) =3&#10;               ∧ card(ran(valid_sensors_gear_extended(right)◁gear_extended(right)))&gt;1&#10;               ∧ card(gear_extended(right)▷{FALSE})=2)&#10;               ∧ (card(ran( ((valid_sensors_gear_extended(right)∖dom(gear_extended(right)▷{FALSE}))◁gear_extended(right)) ∪ (valid_sensors_gear_extended(front)◁gear_extended(front)) ∪ (valid_sensors_gear_extended(left)◁gear_extended(left)) ))=1)&#10;             ⇒ (newstate_anomaly = anomaly&#10;                ∧ newstate_lockeddown_right = FALSE&#10;                ∧ newstate_lockeddown_front ∈ ran(valid_sensors_gear_extended(front)◁gear_extended(front))&#10;                ∧ newstate_lockeddown_left ∈ ran(valid_sensors_gear_extended(left)◁gear_extended(left))&#10;                ∧ newstate_invalidsensor = {right↦dom(gear_extended(right)▷{TRUE})})"/>
<org.eventb.core.guard name="_sJHsgXueEeS15didSJpwjg" org.eventb.core.comment="anomaly, sensor completely wrong" org.eventb.core.label="grdCompleteInvalidSensor" org.eventb.core.predicate="(card(valid_sensors_gear_extended(front) ∪ valid_sensors_gear_extended(left) ∪ valid_sensors_gear_extended(right)) =2&#10;                         ∧ (card(ran( (valid_sensors_gear_extended(front)◁gear_extended(front)) ∪ (valid_sensors_gear_extended(left)◁gear_extended(left)) ∪ (valid_sensors_gear_extended(right)◁gear_extended(right)) ))&gt;1) )&#10;             ⇒ (newstate_anomaly = TRUE&#10;                ∧ newstate_lockeddown_front ∈ ran(valid_sensors_gear_extended(front)◁gear_extended(front))&#10;                ∧ newstate_lockeddown_left ∈ ran(valid_sensors_gear_extended(left)◁gear_extended(left))&#10;                ∧ newstate_lockeddown_right ∈ ran(valid_sensors_gear_extended(right)◁gear_extended(right))&#10;                ∧ newstate_invalidsensor = ∅)"/>
<org.eventb.core.action name="_ANk3gXkQEeOBXrBZ8EbeCQ" org.eventb.core.assignment="gears_locked_down ≔ {front↦newstate_lockeddown_front,left↦newstate_lockeddown_left,right↦newstate_lockeddown_right}" org.eventb.core.label="act1"/>
<org.eventb.core.action name="_laYfcHulEeS15didSJpwjg" org.eventb.core.assignment="gears_maneuvering ≔ {front↦bool(( ran( (valid_sensors_gear_extended(front)◁gear_extended(front)))&#10;                                  ∪ ran( (valid_sensors_gear_retracted(front)◁gear_retracted(front)))&#10;                                ) = {FALSE})}&#10;                                ∪&#10;                                {left↦bool(( ran( (valid_sensors_gear_extended(left)◁gear_extended(left)))&#10;                                  ∪ ran( (valid_sensors_gear_retracted(left)◁gear_retracted(left)))&#10;                                ) = {FALSE})}&#10;                                ∪&#10;                                {right↦bool(( ran( (valid_sensors_gear_extended(right)◁gear_extended(right)))&#10;                                  ∪ ran( (valid_sensors_gear_retracted(right)◁gear_retracted(right)))&#10;                                ) = {FALSE})}" org.eventb.core.comment="@act3 anomaly ≔  newstate_anomaly&#10;      @act4 valid_sensors_gear_extended ≔ valid_sensors_gear_extended ∖ newstate_invalidsensor" org.eventb.core.label="act2"/>
</org.eventb.core.event>
<org.eventb.core.event name="_wyLOkHkREeOBXrBZ8EbeCQ" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.label="env_turn_on_red_light">
<org.eventb.core.guard name="_wyLOkXkREeOBXrBZ8EbeCQ" org.eventb.core.label="grd" org.eventb.core.predicate="red_light = off"/>
<org.eventb.core.guard name="_wyL1oHkREeOBXrBZ8EbeCQ" org.eventb.core.label="grd2" org.eventb.core.predicate="anomaly = TRUE"/>
<org.eventb.core.action name="_wyL1oXkREeOBXrBZ8EbeCQ" org.eventb.core.assignment="red_light ≔ on" org.eventb.core.label="act"/>
</org.eventb.core.event>
<org.eventb.core.event name="_wyL1onkREeOBXrBZ8EbeCQ" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.label="env_turn_on_orange_light">
<org.eventb.core.guard name="_wyL1o3kREeOBXrBZ8EbeCQ" org.eventb.core.label="grd" org.eventb.core.predicate="orange_light = off"/>
<org.eventb.core.guard name="_5gcPwHuaEeS15didSJpwjg" org.eventb.core.label="grdNotManeuveringFront" org.eventb.core.predicate="gears_maneuvering(front) = TRUE"/>
<org.eventb.core.guard name="_5gcPwXuaEeS15didSJpwjg" org.eventb.core.label="grdNotManeuveringLeft" org.eventb.core.predicate="gears_maneuvering(left)  = TRUE"/>
<org.eventb.core.guard name="_5gcPwnuaEeS15didSJpwjg" org.eventb.core.label="grdNotManeuveringRight" org.eventb.core.predicate="gears_maneuvering(right) = TRUE"/>
<org.eventb.core.action name="_wyL1pHkREeOBXrBZ8EbeCQ" org.eventb.core.assignment="orange_light ≔ on" org.eventb.core.label="act"/>
</org.eventb.core.event>
<org.eventb.core.event name="_f-puYHkOEeOBXrBZ8EbeCQ" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.label="env_turn_off_orange_light">
<org.eventb.core.guard name="_NF3GoHkSEeOBXrBZ8EbeCQ" org.eventb.core.label="grd" org.eventb.core.predicate="orange_light = on"/>
<org.eventb.core.guard name="_5gc20HuaEeS15didSJpwjg" org.eventb.core.label="grdNotManeuveringFront" org.eventb.core.predicate="gears_maneuvering(front) = FALSE"/>
<org.eventb.core.guard name="_5gc20XuaEeS15didSJpwjg" org.eventb.core.label="grdNotManeuveringLeft" org.eventb.core.predicate="gears_maneuvering(left)  = FALSE"/>
<org.eventb.core.guard name="_5gc20nuaEeS15didSJpwjg" org.eventb.core.label="grdNotManeuveringRight" org.eventb.core.predicate="gears_maneuvering(right) = FALSE"/>
<org.eventb.core.action name="_G4xuwHkREeOBXrBZ8EbeCQ" org.eventb.core.assignment="orange_light ≔ off" org.eventb.core.label="act"/>
</org.eventb.core.event>
<org.eventb.core.event name="_NF4UwHkSEeOBXrBZ8EbeCQ" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.label="env_turn_on_green_light">
<org.eventb.core.guard name="_NF4UwXkSEeOBXrBZ8EbeCQ" org.eventb.core.label="grd" org.eventb.core.predicate="green_light = off"/>
<org.eventb.core.guard name="_5gdd4HuaEeS15didSJpwjg" org.eventb.core.label="grdLockedDownFront" org.eventb.core.predicate="gears_locked_down(front) = TRUE"/>
<org.eventb.core.guard name="_5gdd4XuaEeS15didSJpwjg" org.eventb.core.label="grdLockedDownLeft" org.eventb.core.predicate="gears_locked_down(left)  = TRUE"/>
<org.eventb.core.guard name="_5gdd4nuaEeS15didSJpwjg" org.eventb.core.label="grdLockedDownRight" org.eventb.core.predicate="gears_locked_down(right) = TRUE"/>
<org.eventb.core.action name="_NF470HkSEeOBXrBZ8EbeCQ" org.eventb.core.assignment="green_light ≔ on" org.eventb.core.label="act"/>
</org.eventb.core.event>
<org.eventb.core.event name="_NF470XkSEeOBXrBZ8EbeCQ" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.label="env_turn_off_green_light">
<org.eventb.core.guard name="_NF470nkSEeOBXrBZ8EbeCQ" org.eventb.core.label="grd" org.eventb.core.predicate="green_light = on"/>
<org.eventb.core.guard name="_5gdd43uaEeS15didSJpwjg" org.eventb.core.label="grdNotLockedDownFront" org.eventb.core.predicate="gears_locked_down(front) = FALSE"/>
<org.eventb.core.guard name="_5geE8HuaEeS15didSJpwjg" org.eventb.core.label="grdNotLockedDownLeft" org.eventb.core.predicate="gears_locked_down(left)  = FALSE"/>
<org.eventb.core.guard name="_5geE8XuaEeS15didSJpwjg" org.eventb.core.label="grdNotLockedDownRight" org.eventb.core.predicate="gears_locked_down(right) = FALSE"/>
<org.eventb.core.action name="_NF471HkSEeOBXrBZ8EbeCQ" org.eventb.core.assignment="green_light ≔ off" org.eventb.core.label="act"/>
</org.eventb.core.event>
</org.eventb.core.machineFile>
